// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: clinic.proto

#include "clinic.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace clinic_data {
PROTOBUF_CONSTEXPR Workers_Doctor::Workers_Doctor(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.surname_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.pesel_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct Workers_DoctorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Workers_DoctorDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Workers_DoctorDefaultTypeInternal() {}
  union {
    Workers_Doctor _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Workers_DoctorDefaultTypeInternal _Workers_Doctor_default_instance_;
PROTOBUF_CONSTEXPR Workers_Receptionist::Workers_Receptionist(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.surname_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.pesel_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct Workers_ReceptionistDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Workers_ReceptionistDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Workers_ReceptionistDefaultTypeInternal() {}
  union {
    Workers_Receptionist _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Workers_ReceptionistDefaultTypeInternal _Workers_Receptionist_default_instance_;
PROTOBUF_CONSTEXPR Workers_Doctors::Workers_Doctors(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.doctors_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct Workers_DoctorsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Workers_DoctorsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Workers_DoctorsDefaultTypeInternal() {}
  union {
    Workers_Doctors _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Workers_DoctorsDefaultTypeInternal _Workers_Doctors_default_instance_;
PROTOBUF_CONSTEXPR Workers_Receptionists::Workers_Receptionists(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.receptionists_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct Workers_ReceptionistsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Workers_ReceptionistsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Workers_ReceptionistsDefaultTypeInternal() {}
  union {
    Workers_Receptionists _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Workers_ReceptionistsDefaultTypeInternal _Workers_Receptionists_default_instance_;
PROTOBUF_CONSTEXPR Workers::Workers(
    ::_pbi::ConstantInitialized) {}
struct WorkersDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WorkersDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~WorkersDefaultTypeInternal() {}
  union {
    Workers _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WorkersDefaultTypeInternal _Workers_default_instance_;
}  // namespace clinic_data
static ::_pb::Metadata file_level_metadata_clinic_2eproto[5];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_clinic_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_clinic_2eproto = nullptr;

const uint32_t TableStruct_clinic_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::clinic_data::Workers_Doctor, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::clinic_data::Workers_Doctor, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::clinic_data::Workers_Doctor, _impl_.surname_),
  PROTOBUF_FIELD_OFFSET(::clinic_data::Workers_Doctor, _impl_.pesel_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::clinic_data::Workers_Receptionist, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::clinic_data::Workers_Receptionist, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::clinic_data::Workers_Receptionist, _impl_.surname_),
  PROTOBUF_FIELD_OFFSET(::clinic_data::Workers_Receptionist, _impl_.pesel_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::clinic_data::Workers_Doctors, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::clinic_data::Workers_Doctors, _impl_.doctors_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::clinic_data::Workers_Receptionists, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::clinic_data::Workers_Receptionists, _impl_.receptionists_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::clinic_data::Workers, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::clinic_data::Workers_Doctor)},
  { 9, -1, -1, sizeof(::clinic_data::Workers_Receptionist)},
  { 18, -1, -1, sizeof(::clinic_data::Workers_Doctors)},
  { 25, -1, -1, sizeof(::clinic_data::Workers_Receptionists)},
  { 32, -1, -1, sizeof(::clinic_data::Workers)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::clinic_data::_Workers_Doctor_default_instance_._instance,
  &::clinic_data::_Workers_Receptionist_default_instance_._instance,
  &::clinic_data::_Workers_Doctors_default_instance_._instance,
  &::clinic_data::_Workers_Receptionists_default_instance_._instance,
  &::clinic_data::_Workers_default_instance_._instance,
};

const char descriptor_table_protodef_clinic_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\014clinic.proto\022\013clinic_data\"\203\002\n\007Workers\032"
  "6\n\006Doctor\022\014\n\004name\030\001 \001(\t\022\017\n\007surname\030\002 \001(\t"
  "\022\r\n\005pesel\030\003 \001(\t\032<\n\014Receptionist\022\014\n\004name\030"
  "\001 \001(\t\022\017\n\007surname\030\002 \001(\t\022\r\n\005pesel\030\003 \001(\t\0327\n"
  "\007Doctors\022,\n\007doctors\030\001 \003(\0132\033.clinic_data."
  "Workers.Doctor\032I\n\rReceptionists\0228\n\rrecep"
  "tionists\030\001 \003(\0132!.clinic_data.Workers.Rec"
  "eptionistb\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_clinic_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_clinic_2eproto = {
    false, false, 297, descriptor_table_protodef_clinic_2eproto,
    "clinic.proto",
    &descriptor_table_clinic_2eproto_once, nullptr, 0, 5,
    schemas, file_default_instances, TableStruct_clinic_2eproto::offsets,
    file_level_metadata_clinic_2eproto, file_level_enum_descriptors_clinic_2eproto,
    file_level_service_descriptors_clinic_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_clinic_2eproto_getter() {
  return &descriptor_table_clinic_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_clinic_2eproto(&descriptor_table_clinic_2eproto);
namespace clinic_data {

// ===================================================================

class Workers_Doctor::_Internal {
 public:
};

Workers_Doctor::Workers_Doctor(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:clinic_data.Workers.Doctor)
}
Workers_Doctor::Workers_Doctor(const Workers_Doctor& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Workers_Doctor* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.surname_){}
    , decltype(_impl_.pesel_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.surname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.surname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_surname().empty()) {
    _this->_impl_.surname_.Set(from._internal_surname(), 
      _this->GetArenaForAllocation());
  }
  _impl_.pesel_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.pesel_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_pesel().empty()) {
    _this->_impl_.pesel_.Set(from._internal_pesel(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:clinic_data.Workers.Doctor)
}

inline void Workers_Doctor::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.surname_){}
    , decltype(_impl_.pesel_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.surname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.surname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.pesel_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.pesel_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Workers_Doctor::~Workers_Doctor() {
  // @@protoc_insertion_point(destructor:clinic_data.Workers.Doctor)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Workers_Doctor::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.surname_.Destroy();
  _impl_.pesel_.Destroy();
}

void Workers_Doctor::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Workers_Doctor::Clear() {
// @@protoc_insertion_point(message_clear_start:clinic_data.Workers.Doctor)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.surname_.ClearToEmpty();
  _impl_.pesel_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Workers_Doctor::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "clinic_data.Workers.Doctor.name"));
        } else
          goto handle_unusual;
        continue;
      // string surname = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_surname();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "clinic_data.Workers.Doctor.surname"));
        } else
          goto handle_unusual;
        continue;
      // string pesel = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_pesel();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "clinic_data.Workers.Doctor.pesel"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Workers_Doctor::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:clinic_data.Workers.Doctor)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "clinic_data.Workers.Doctor.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string surname = 2;
  if (!this->_internal_surname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_surname().data(), static_cast<int>(this->_internal_surname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "clinic_data.Workers.Doctor.surname");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_surname(), target);
  }

  // string pesel = 3;
  if (!this->_internal_pesel().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pesel().data(), static_cast<int>(this->_internal_pesel().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "clinic_data.Workers.Doctor.pesel");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_pesel(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:clinic_data.Workers.Doctor)
  return target;
}

size_t Workers_Doctor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:clinic_data.Workers.Doctor)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string surname = 2;
  if (!this->_internal_surname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_surname());
  }

  // string pesel = 3;
  if (!this->_internal_pesel().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pesel());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Workers_Doctor::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Workers_Doctor::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Workers_Doctor::GetClassData() const { return &_class_data_; }


void Workers_Doctor::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Workers_Doctor*>(&to_msg);
  auto& from = static_cast<const Workers_Doctor&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:clinic_data.Workers.Doctor)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_surname().empty()) {
    _this->_internal_set_surname(from._internal_surname());
  }
  if (!from._internal_pesel().empty()) {
    _this->_internal_set_pesel(from._internal_pesel());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Workers_Doctor::CopyFrom(const Workers_Doctor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:clinic_data.Workers.Doctor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Workers_Doctor::IsInitialized() const {
  return true;
}

void Workers_Doctor::InternalSwap(Workers_Doctor* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.surname_, lhs_arena,
      &other->_impl_.surname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.pesel_, lhs_arena,
      &other->_impl_.pesel_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata Workers_Doctor::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_clinic_2eproto_getter, &descriptor_table_clinic_2eproto_once,
      file_level_metadata_clinic_2eproto[0]);
}

// ===================================================================

class Workers_Receptionist::_Internal {
 public:
};

Workers_Receptionist::Workers_Receptionist(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:clinic_data.Workers.Receptionist)
}
Workers_Receptionist::Workers_Receptionist(const Workers_Receptionist& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Workers_Receptionist* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.surname_){}
    , decltype(_impl_.pesel_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.surname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.surname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_surname().empty()) {
    _this->_impl_.surname_.Set(from._internal_surname(), 
      _this->GetArenaForAllocation());
  }
  _impl_.pesel_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.pesel_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_pesel().empty()) {
    _this->_impl_.pesel_.Set(from._internal_pesel(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:clinic_data.Workers.Receptionist)
}

inline void Workers_Receptionist::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.surname_){}
    , decltype(_impl_.pesel_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.surname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.surname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.pesel_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.pesel_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Workers_Receptionist::~Workers_Receptionist() {
  // @@protoc_insertion_point(destructor:clinic_data.Workers.Receptionist)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Workers_Receptionist::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.surname_.Destroy();
  _impl_.pesel_.Destroy();
}

void Workers_Receptionist::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Workers_Receptionist::Clear() {
// @@protoc_insertion_point(message_clear_start:clinic_data.Workers.Receptionist)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.surname_.ClearToEmpty();
  _impl_.pesel_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Workers_Receptionist::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "clinic_data.Workers.Receptionist.name"));
        } else
          goto handle_unusual;
        continue;
      // string surname = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_surname();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "clinic_data.Workers.Receptionist.surname"));
        } else
          goto handle_unusual;
        continue;
      // string pesel = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_pesel();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "clinic_data.Workers.Receptionist.pesel"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Workers_Receptionist::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:clinic_data.Workers.Receptionist)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "clinic_data.Workers.Receptionist.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string surname = 2;
  if (!this->_internal_surname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_surname().data(), static_cast<int>(this->_internal_surname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "clinic_data.Workers.Receptionist.surname");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_surname(), target);
  }

  // string pesel = 3;
  if (!this->_internal_pesel().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pesel().data(), static_cast<int>(this->_internal_pesel().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "clinic_data.Workers.Receptionist.pesel");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_pesel(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:clinic_data.Workers.Receptionist)
  return target;
}

size_t Workers_Receptionist::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:clinic_data.Workers.Receptionist)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string surname = 2;
  if (!this->_internal_surname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_surname());
  }

  // string pesel = 3;
  if (!this->_internal_pesel().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pesel());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Workers_Receptionist::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Workers_Receptionist::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Workers_Receptionist::GetClassData() const { return &_class_data_; }


void Workers_Receptionist::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Workers_Receptionist*>(&to_msg);
  auto& from = static_cast<const Workers_Receptionist&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:clinic_data.Workers.Receptionist)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_surname().empty()) {
    _this->_internal_set_surname(from._internal_surname());
  }
  if (!from._internal_pesel().empty()) {
    _this->_internal_set_pesel(from._internal_pesel());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Workers_Receptionist::CopyFrom(const Workers_Receptionist& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:clinic_data.Workers.Receptionist)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Workers_Receptionist::IsInitialized() const {
  return true;
}

void Workers_Receptionist::InternalSwap(Workers_Receptionist* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.surname_, lhs_arena,
      &other->_impl_.surname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.pesel_, lhs_arena,
      &other->_impl_.pesel_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata Workers_Receptionist::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_clinic_2eproto_getter, &descriptor_table_clinic_2eproto_once,
      file_level_metadata_clinic_2eproto[1]);
}

// ===================================================================

class Workers_Doctors::_Internal {
 public:
};

Workers_Doctors::Workers_Doctors(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:clinic_data.Workers.Doctors)
}
Workers_Doctors::Workers_Doctors(const Workers_Doctors& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Workers_Doctors* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.doctors_){from._impl_.doctors_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:clinic_data.Workers.Doctors)
}

inline void Workers_Doctors::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.doctors_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

Workers_Doctors::~Workers_Doctors() {
  // @@protoc_insertion_point(destructor:clinic_data.Workers.Doctors)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Workers_Doctors::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.doctors_.~RepeatedPtrField();
}

void Workers_Doctors::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Workers_Doctors::Clear() {
// @@protoc_insertion_point(message_clear_start:clinic_data.Workers.Doctors)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.doctors_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Workers_Doctors::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .clinic_data.Workers.Doctor doctors = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_doctors(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Workers_Doctors::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:clinic_data.Workers.Doctors)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .clinic_data.Workers.Doctor doctors = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_doctors_size()); i < n; i++) {
    const auto& repfield = this->_internal_doctors(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:clinic_data.Workers.Doctors)
  return target;
}

size_t Workers_Doctors::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:clinic_data.Workers.Doctors)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .clinic_data.Workers.Doctor doctors = 1;
  total_size += 1UL * this->_internal_doctors_size();
  for (const auto& msg : this->_impl_.doctors_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Workers_Doctors::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Workers_Doctors::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Workers_Doctors::GetClassData() const { return &_class_data_; }


void Workers_Doctors::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Workers_Doctors*>(&to_msg);
  auto& from = static_cast<const Workers_Doctors&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:clinic_data.Workers.Doctors)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.doctors_.MergeFrom(from._impl_.doctors_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Workers_Doctors::CopyFrom(const Workers_Doctors& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:clinic_data.Workers.Doctors)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Workers_Doctors::IsInitialized() const {
  return true;
}

void Workers_Doctors::InternalSwap(Workers_Doctors* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.doctors_.InternalSwap(&other->_impl_.doctors_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Workers_Doctors::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_clinic_2eproto_getter, &descriptor_table_clinic_2eproto_once,
      file_level_metadata_clinic_2eproto[2]);
}

// ===================================================================

class Workers_Receptionists::_Internal {
 public:
};

Workers_Receptionists::Workers_Receptionists(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:clinic_data.Workers.Receptionists)
}
Workers_Receptionists::Workers_Receptionists(const Workers_Receptionists& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Workers_Receptionists* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.receptionists_){from._impl_.receptionists_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:clinic_data.Workers.Receptionists)
}

inline void Workers_Receptionists::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.receptionists_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

Workers_Receptionists::~Workers_Receptionists() {
  // @@protoc_insertion_point(destructor:clinic_data.Workers.Receptionists)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Workers_Receptionists::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.receptionists_.~RepeatedPtrField();
}

void Workers_Receptionists::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Workers_Receptionists::Clear() {
// @@protoc_insertion_point(message_clear_start:clinic_data.Workers.Receptionists)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.receptionists_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Workers_Receptionists::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .clinic_data.Workers.Receptionist receptionists = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_receptionists(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Workers_Receptionists::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:clinic_data.Workers.Receptionists)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .clinic_data.Workers.Receptionist receptionists = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_receptionists_size()); i < n; i++) {
    const auto& repfield = this->_internal_receptionists(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:clinic_data.Workers.Receptionists)
  return target;
}

size_t Workers_Receptionists::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:clinic_data.Workers.Receptionists)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .clinic_data.Workers.Receptionist receptionists = 1;
  total_size += 1UL * this->_internal_receptionists_size();
  for (const auto& msg : this->_impl_.receptionists_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Workers_Receptionists::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Workers_Receptionists::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Workers_Receptionists::GetClassData() const { return &_class_data_; }


void Workers_Receptionists::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Workers_Receptionists*>(&to_msg);
  auto& from = static_cast<const Workers_Receptionists&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:clinic_data.Workers.Receptionists)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.receptionists_.MergeFrom(from._impl_.receptionists_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Workers_Receptionists::CopyFrom(const Workers_Receptionists& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:clinic_data.Workers.Receptionists)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Workers_Receptionists::IsInitialized() const {
  return true;
}

void Workers_Receptionists::InternalSwap(Workers_Receptionists* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.receptionists_.InternalSwap(&other->_impl_.receptionists_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Workers_Receptionists::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_clinic_2eproto_getter, &descriptor_table_clinic_2eproto_once,
      file_level_metadata_clinic_2eproto[3]);
}

// ===================================================================

class Workers::_Internal {
 public:
};

Workers::Workers(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:clinic_data.Workers)
}
Workers::Workers(const Workers& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  Workers* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:clinic_data.Workers)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Workers::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Workers::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata Workers::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_clinic_2eproto_getter, &descriptor_table_clinic_2eproto_once,
      file_level_metadata_clinic_2eproto[4]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace clinic_data
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::clinic_data::Workers_Doctor*
Arena::CreateMaybeMessage< ::clinic_data::Workers_Doctor >(Arena* arena) {
  return Arena::CreateMessageInternal< ::clinic_data::Workers_Doctor >(arena);
}
template<> PROTOBUF_NOINLINE ::clinic_data::Workers_Receptionist*
Arena::CreateMaybeMessage< ::clinic_data::Workers_Receptionist >(Arena* arena) {
  return Arena::CreateMessageInternal< ::clinic_data::Workers_Receptionist >(arena);
}
template<> PROTOBUF_NOINLINE ::clinic_data::Workers_Doctors*
Arena::CreateMaybeMessage< ::clinic_data::Workers_Doctors >(Arena* arena) {
  return Arena::CreateMessageInternal< ::clinic_data::Workers_Doctors >(arena);
}
template<> PROTOBUF_NOINLINE ::clinic_data::Workers_Receptionists*
Arena::CreateMaybeMessage< ::clinic_data::Workers_Receptionists >(Arena* arena) {
  return Arena::CreateMessageInternal< ::clinic_data::Workers_Receptionists >(arena);
}
template<> PROTOBUF_NOINLINE ::clinic_data::Workers*
Arena::CreateMaybeMessage< ::clinic_data::Workers >(Arena* arena) {
  return Arena::CreateMessageInternal< ::clinic_data::Workers >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
